version: "3.8"

services:
  identityservice:
    build:
      context: ./backend/IdentityService
    container_name: identityservice
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres_identity;Port=5432;Database=identity_db;Username=postgres;Password=postgres
      - Jwt__Key=bXlfc3VwZXJfc2VjcmV0X2FuZF9sb25nX2tleV9mb3Jfc2lnbmluZ190b2tlbnNfMzJieXRlcw==
      - Jwt__Issuer=IdentityService
      - Jwt__Audience=IdentityServiceUsers
      - Jwt__ExpireHours=2
      - Serilog__SeqServerUrl=http://seq:80
    ports:
      - "5001:8080"
    depends_on:
      postgres_identity:
        condition: service_healthy
      seq:
        condition: service_started
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/api/auth/health" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  resourcemanagerservice:
    build:
      context: ./backend/ResourceManagerService
    container_name: resourcemanagerservice
    privileged: true
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres_resource;Port=5432;Database=resource_db;Username=postgres;Password=postgres
      - Serilog__SeqServerUrl=http://seq:80
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "5002:8080"
    depends_on:
      postgres_resource:
        condition: service_healthy
      seq:
        condition: service_started
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/api/tasks" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  postgres_identity:
    image: postgres:16
    container_name: postgres_identity
    environment:
      POSTGRES_DB: identity_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  postgres_resource:
    image: postgres:16
    container_name: postgres_resource
    environment:
      POSTGRES_DB: resource_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - pgdata_resource:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  seq:
    image: datalust/seq:latest
    container_name: seq
    environment:
      ACCEPT_EULA: "Y"
    ports:
      - "5341:80"
    volumes:
      - seqdata:/data
    restart: unless-stopped
    networks:
      - app-network

  docker_stats_exporter:
    image: wywywywy/docker_stats_exporter:latest
    container_name: docker_stats_exporter
    privileged: true
    ports:
      - "9487:9487"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    networks:
      - app-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    privileged: true
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    depends_on:
      - docker_stats_exporter
    restart: unless-stopped
    networks:
      - app-network

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "9098:80" # HOST:CONTAINER
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - seq
    restart: unless-stopped
    networks:
      - app-network

  blockchain-node:
    image: trufflesuite/ganache-cli
    command:
      - --networkId
      - "1337"
      - --port
      - "8545"
      - --host
      - "0.0.0.0"
      - --db
      - "/data"
    ports:
      - "8545:8545"
    volumes:
      - ./ganache_data:/data
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  pgdata:
  pgdata_resource:
  seqdata:
